name: Pre-release CI Testing

on:
  push:
    branches:
      - main
      - 'dev-*'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort pyright

      - name: Run flake8
        run: flake8 .

      - name: Run black
        run: black --check .

      - name: Run isort
        run: isort --check .

  type-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyright

      - name: Run pyright
        run: pyright

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio
          pip install -e .

      - name: Run tests
        run: pytest -v

  pip-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install package
        run: python -m pip install .
      - uses: pypa/gh-action-pip-audit@v1.1.0

  sanity:
    runs-on: ubuntu-latest
    needs:
      - lint
      - type-check
      - test
      - pip-audit
    steps:
      - uses: actions/checkout@v4
      - name: Set Up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install Package in Editable Mode
        run: |
          python -m pip install --upgrade pip
          pip install -e .
      - name: Validate CLI Does Not Crash
        run: |
          # Run the CLI in single execution mode
          OUTPUT=$(local-operator --hosting test --model test-model exec "print hello world")
          # Check if the output contains the expected message
          if ! echo "$OUTPUT" | grep -i "I have printed 'Hello World' to the console" > /dev/null; then
            echo "Expected output containing 'I have printed 'Hello World' to the console', but got:"
            echo "$OUTPUT"
            exit 1
          fi
