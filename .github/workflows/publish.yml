# This workflow will upload a Python Package to PyPI when a new tag is pushed to main

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest
    outputs:
      skip_build: ${{ steps.tag-check.outputs.skip_build }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get release tag
        id: tag-check
        run: |
          # Get the release tag from the GitHub event
          CURRENT_TAG=${{ github.event.release.tag_name }}
          echo "Release tag detected: $CURRENT_TAG"
          echo "skip_build=false" >> $GITHUB_OUTPUT

      - uses: actions/setup-python@v5
        if: ${{ steps.tag-check.outputs.skip_build == 'false' }}
        with:
          python-version: "3.12"

      - name: Build release distributions
        if: ${{ steps.tag-check.outputs.skip_build == 'false' }}
        run: |
          python -m pip install build
          python -m build

      - name: Upload distributions
        if: ${{ steps.tag-check.outputs.skip_build == 'false' }}
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    if: ${{ needs.release-build.result == 'success' && needs.release-build.outputs.skip_build == 'false' }}
    permissions:
      id-token: write

    environment:
      name: pypi

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
