# This workflow will upload a Python Package to PyPI when a new tag is pushed to main

name: Upload Python Package

on:
  push:
    tags:
      - 'v*'  # Match tags starting with 'v'
    branches:
      - main  # Only trigger on main branch

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get full git history for version detection

      - name: Check for tag changes
        id: tag-check
        run: |
          # Get previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          CURRENT_TAG=$(git describe --tags --abbrev=0 HEAD)
          
          if [ "$PREV_TAG" = "$CURRENT_TAG" ]; then
            echo "No new tag detected, skipping build"
            echo "skip_build=true" >> $GITHUB_OUTPUT
          else
            echo "New tag detected: $CURRENT_TAG"
            echo "skip_build=false" >> $GITHUB_OUTPUT
          fi

      - uses: actions/setup-python@v5
        if: steps.tag-check.outputs.skip_build == 'false'
        with:
          python-version: "3.12"

      - name: Build release distributions
        if: steps.tag-check.outputs.skip_build == 'false'
        run: |
          python -m pip install build
          python -m build

      - name: Upload distributions
        if: steps.tag-check.outputs.skip_build == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    if: needs.release-build.result == 'success' && steps.tag-check.outputs.skip_build == 'false'
    permissions:
      id-token: write

    environment:
      name: pypi

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
